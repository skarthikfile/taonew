{"version":3,"sources":["routes.js","list/index.js","../lib/vis/vis.min!css","../treeRender.js","tree/view.js"],"names":["define","Lists","actions","index","Trees","viewTree","$","__","helpers","feedback","_addSquareBtn","title","icon","$listToolBar","$btn","class","append","start","saveUrl","_url","delListUrl","delEltUrl","click","$listSaveBtn","$listNewBtn","this","uri","data","$listContainer","$listForm","find","$listTitleBar","length","wrapInner","$labelEdit","val","text","html","replaceWith","attr","elementList","addClass","prepend","sortable","axis","opacity","placeholder","tolerance","update","event","ui","map","each","id","newName","replace","on","postJson","closest","serializeArray","response","saved","success","_load","getMainContainerSelector","error","level","children","confirm","element","parent","deleted","remove","$list","parents","_","vis","destroy","network","treeContainer","settings","treeRender","init","container","treeData","options","Element","TypeError","nodes","edges","layout","hierarchical","sortMethod","levelSeparation","shape","color","border","background","highlight","font","face","smooth","width","arrows","to","physics","scaling","label","extend","run","Network","once","setOptions","hierarchicalRepulsion","nodeDistance","stabilization","fit","animation","duration","easingFunction","binder","context","itemRunnerController","i","obj","$container","post","$parent","resizeContainer","height","eq","outerHeight","window"],"mappings":"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":"taoBackOffice/controller/routes.js","sourcesContent":["define('taoBackOffice/controller/routes',[],function () {\n    'use strict';\n\n    return {\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index'\n            }\n        },\n        'Trees': {\n            'actions': {\n                'viewTree': 'controller/tree/view'\n            }\n        }\n    };\n});\n\n","define('taoBackOffice/controller/list/index',['jquery', 'i18n', 'helpers', 'ui/feedback'], function ($, __, helpers, feedback) {\n    'use strict';\n\n    function _addSquareBtn(title, icon, $listToolBar) {\n        var $btn = $('<button>', { 'class': 'btn-info small lft ' +  'icon-'+ icon, title: __(title) });\n        $listToolBar.append($btn);\n        return $btn;\n    }\n\n    return {\n\n        start: function () {\n\n            var saveUrl = helpers._url('saveLists', 'Lists', 'taoBackOffice');\n            var delListUrl = helpers._url('removeList', 'Lists', 'taoBackOffice');\n            var delEltUrl = helpers._url('removeListElement', 'Lists', 'taoBackOffice');\n\n            $(\".list-edit-btn\").click(function () {\n                var $btn = $(this),\n                    uri = $btn.data('uri'),\n                    $listContainer = $(\"#list-data_\" + uri ),\n                // form must be on the inside rather than on the outside as it has been in 2.6\n                    $listForm     = $listContainer.find('form'),\n                    $listTitleBar = $listContainer.find('.container-title h6'),\n                    $listToolBar  = $listContainer.find('.data-container-footer'),\n                    $listSaveBtn,\n                    $listNewBtn;\n\n                if (!$listForm.length) {\n\n                    $listForm = $('<form>');\n                    $listContainer.wrapInner($listForm);\n                    $listContainer.find('form').append('<input type=\"hidden\" name=\"uri\" value=\"' + uri + '\" />');\n\n                    var $labelEdit = $(\"<input type='text' name='label' value=''/>\").val($listTitleBar.text());\n                    $listTitleBar.html($labelEdit);\n\n                    if ($listContainer.find('.list-element').length) {\n                        $listContainer.find('.list-element').replaceWith(function () {\n                            return $(\"<input type='text' name='\" + $(this).attr('id') + \"' value='' />\").val($(this).text());\n                        });\n                    }\n\n                    var elementList = $listContainer.find('ol');\n                    elementList.addClass('sortable-list');\n                    elementList.find('li').prepend('<span class=\"icon-grip\" ></span>');\n                    elementList.find('li').append('<span class=\"icon-checkbox-crossed list-element-delete-btn\" style=\"cursor:pointer;\" ></span>');\n\n                    elementList.sortable({\n                        axis: 'y',\n                        opacity: 0.6,\n                        placeholder: 'ui-state-error',\n                        tolerance: 'pointer',\n                        update: function (event, ui) {\n                            var map = {};\n                            $.each($(this).sortable('toArray'), function (index, id) {\n                                map[id] = 'list-element_' + (index + 1);\n                            });\n                            $(this).find('li').each(function () {\n                                var id = $(this).attr('id');\n                                if (map[id]) {\n                                    $(this).attr('id', map[id]);\n                                    var newName = $(this).find('input').attr('name').replace(id, map[id]);\n                                    $(this).find('input').attr('name', newName);\n                                }\n                            });\n                        }\n                    });\n\n                    $listSaveBtn = _addSquareBtn('Save element', 'save', $listToolBar);\n                    $listSaveBtn.on('click', function () {\n                        $.postJson(\n                            saveUrl,\n                            $(this).closest('form').serializeArray(),\n                            function (response) {\n                                if (response.saved) {\n                                    feedback().success(__('\"list saved\"'));\n                                    helpers._load(helpers.getMainContainerSelector(), helpers._url('index', 'Lists', 'taoBackOffice'));\n                                }else{\n                                    feedback().error(__('List not saved'));\n                                }\n                            }\n                        );\n                        return false;\n                    });\n\n                    $listNewBtn = _addSquareBtn('New element', 'add', $listToolBar);\n                    $listNewBtn.click(function () {\n                        var level = $(this).closest('form').find('ol').children().length + 1;\n                        $(this).closest('form').find('ol').append(\n                            \"<li id='list-element_\" + level + \"'>\" +\n                            \"<span class='icon-grip' ></span>\" +\n                            \"<input type='text' name='list-element_\" + level + \"_' />\" +\n                            \"<span class='icon-add list-element-delete-btn' ></span>\" +\n                            \"</li>\");\n                        return false;\n                    });\n                }\n\n                $(\".list-element-delete-btn\").click(function () {\n                    var $btn = $(this),\n                        uri = $btn.data('uri');\n                    if (confirm(__(\"Please confirm you want to delete this list element.\"))) {\n                        var element = $(this).parent();\n                        uri = element.find('input:text').attr('name').replace(/^list\\-element\\_([1-9]*)\\_/, '');\n                        $.postJson(\n                            delEltUrl,\n                            {uri: uri},\n                            function (response) {\n                                if (response.deleted) {\n                                    element.remove();\n                                    feedback().success(__('Element deleted'));\n                                }else{\n                                    feedback().error(__('Element not deleted'));\n                                }\n                            }\n                        );\n                    }\n                });\n            });\n\n            $('.list-delete-btn').click(function () {\n                if (confirm(__(\"Please confirm you want to delete this list. This operation cannot be undone.\"))) {\n                    var $btn = $(this),\n                        uri = $btn.data('uri'),\n                        $list = $(this).parents(\".data-container\");\n                    $.postJson(\n                        delListUrl,\n                        {uri: uri},\n                        function (response) {\n                            if (response.deleted) {\n                                feedback().success(__('List deleted'));\n                                $list.remove();\n                            }else{\n                                feedback().error(__('List not deleted'));\n                            }\n                        }\n                    );\n                }\n            });\n        }\n    };\n});\n\n","\ndefine('css!taoBackOffice/lib/vis/vis.min',[],function(){});\n","define('taoBackOffice/treeRender',[\n    'jquery',\n    'lodash',\n    'taoBackOffice/lib/vis/vis.min',\n    'css!taoBackOffice/lib/vis/vis.min'\n], function ($, _, vis) {\n    'use strict';\n\n    var network = null;\n    var treeContainer = null;\n    var settings = null;\n    var data = null;\n\n    /**\n     * @private\n     */\n    function destroy() {\n        if (network !== null) {\n            network.destroy();\n            network = null;\n        }\n    }\n\n    var treeRender = {\n\n        /**\n         *\n         * @param {Element} container\n         * @param {Object} [treeData]\n         * @param {Object} [options]\n         */\n        init: function (container, treeData, options) {\n\n            if (!container instanceof Element) {\n                throw new TypeError(\"tree container must be specified\");\n            }\n\n            treeContainer = container;\n            options = options || {};\n            treeData = treeData || {nodes: [], edges: []};\n\n\n            settings = {\n                layout: {\n                    hierarchical: {\n                        sortMethod: 'directed',\n                        \"levelSeparation\": 200\n                    }\n                },\n                nodes: {\n                    shape: 'box',\n                    \"color\": {\n                        \"border\": \"#222\",\n                        \"background\": \"#f2f0ee\",\n\n                        \"highlight\": {\n                            \"border\": \"#222\",\n                            \"background\": \"#f2f0ee\"\n                        }\n                    },\n\n                    \"font\": {\n                        \"face\": \"'Franklin Gothic', 'Franklin Gothic Medium', 'Source Sans Pro', sans-serif\",\n                        \"color\": \"#222\"\n                    }\n\n                },\n                edges: {\n                    smooth: false,\n                    width: 0.2,\n                    color: {\n                        color: \"#222\"\n                    },\n                    arrows: {to: true},\n                    \"physics\": false,\n                    \"scaling\": {\n                        \"label\": false\n                    }\n                }\n            };\n\n            $.extend(settings, options);\n\n            // create a network\n            data = {\n                nodes: treeData.nodes ? treeData.nodes : [],\n                edges: treeData.edges ? treeData.edges : []\n            };\n\n        },\n\n        run: function () {\n            destroy();\n\n            network = new vis.Network(treeContainer, data, settings);\n\n            network.once('initRedraw', function () {\n\n                if (data.nodes.length > 100) {\n                    network.setOptions($.extend(settings, {\n                        physics: {\n                            hierarchicalRepulsion: {\n                                nodeDistance: 200\n                            },\n                            stabilization: {\n                                fit: false\n                            }\n                        }\n                    }));\n\n                    network.fit({\n                        nodes: [data.nodes[0].id, data.nodes[1].id], animation: {\n                            duration: 400,\n                            easingFunction: 'linear'\n                        }\n                    });\n                }\n\n            });\n        }\n    };\n\n    return treeRender;\n});\n","define('taoBackOffice/controller/tree/view',[\n    'layout/actions/binder',\n    'uri',\n    'jquery',\n    'context',\n    'helpers',\n    'taoBackOffice/treeRender'\n], function (binder, uri, $, context, helpers, treeRender) {\n    'use strict';\n\n    /**\n     *\n     * @type {{start: Function}}\n     */\n    var itemRunnerController = {\n\n        //the controller initialization\n        start: function () {\n        \t\n        \t$('.tree-container').each(function(i, obj) {\n        \t\tvar $container = $(obj);\n                var uri = $container.data('id');\n\n                $.post(helpers._url('getTree', 'Trees', 'taoBackOffice'), {uri: uri}, function (treeData) {\n\n                    var $parent = $container.closest('.content-block');\n\n                    var resizeContainer = function () {\n                        $container.height($parent.height() - $parent.find('.panel').eq(0).outerHeight());\n                        $container.width($parent.width());\n                    };\n\n                    $(window).on('resize', resizeContainer);\n\n                    resizeContainer();\n                    treeRender.init($container[0], treeData);\n                    treeRender.run();\n\n                });\n        \t});\n        }\n    };\n\n    // the controller is exposed\n    return itemRunnerController;\n});\n"]}